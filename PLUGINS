Lla Plugin Guide
----------------

A lla plugin consists of extending three classes:

 * Plugin
 * Device
 * Port

Their relationship is as follows: A Plugin resgisters Devices, which contain
zero or more Ports. Ports are the basic building block, you need to implement
a read and write method for communicating with lla.


The execution is as follows:

 * The plugin is loaded, and the function

 	create(PluginAdaptor *pa)

   is called. This should return an instance of your plugin 

 * The Plugin's start function is called. This is where you 
   should be creating devices and registering them.

  Sometime later....

 * A Port may be bound to a universe.

 
Tips and Gotchas
---------------

 * You must not block (or even take a 'long' time) in calls to read or write.
   If your device has the potential to block, you should either register a
   file descriptor and callback for writing or run a separate thread 
   (see the opendmxusb plugin for an example)
   


