#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)
AC_INIT(configure.in)
AC_CONFIG_AUX_DIR(config)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(lla, 0.3.0)

# Checks for programs.
AC_LANG(C++)
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_LIBTOOL_DLOPEN
AC_LIBLTDL_CONVENIENCE
AC_PROG_LIBTOOL

AC_CONFIG_SUBDIRS(libltdl)

AC_SUBST(INCLTDL)
AC_SUBST(LIBLTDL)


# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h fcntl.h netinet/in.h stdint.h stdlib.h string.h \
                  sys/ioctl.h sys/socket.h sys/time.h syslog.h termios.h \
                  unistd.h linux/if_packet.h])
AC_CHECK_HEADER(pthread.h, have_threads=posix)
PROTOBUF_SUPPORT([2.0.1])

AM_CONDITIONAL(HAVE_PTHREAD, test "${have_threads}" = "posix")
if test "${have_threads}" = "posix"; then
  AC_DEFINE(HAVE_PTHREAD, 1, [define if pthread is installed])
fi

# Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_PID_T
AC_HEADER_TIME
AC_TYPE_UINT16_T
AC_TYPE_UINT32_T
AC_TYPE_UINT8_T

# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_SELECT_ARGTYPES
AC_FUNC_STAT
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([bzero gettimeofday memmove memset mkdir strdup strrchr \
                inet_ntoa select socket strerror getifaddrs])

# check for ipv6 support - taken from unp
AC_MSG_CHECKING(for IPv6 support)
AC_CACHE_VAL(ac_cv_ipv6,
        AC_TRY_RUN([
#       include <stdlib.h>
#       include <sys/types.h>
#       include <sys/socket.h>
#       include <netinet/in.h>
        /* Make sure the definitions for AF_INET6 and struct sockaddr_in6
         * are defined, and that we can actually create an IPv6 TCP socket.
         */
        main()
        {
                int fd;
                struct sockaddr_in6 foo;
                fd = socket(AF_INET6, SOCK_STREAM, 0);
                exit(fd >= 0 ? 0 : 1);
        }],
        ac_cv_ipv6=yes,
        ac_cv_ipv6=no,
        ac_cv_ipv6=no))
AC_MSG_RESULT($ac_cv_ipv6)
if test $ac_cv_ipv6 = yes ; then
        AC_DEFINE(IPV6, 1, Define to 1 if the system supports IPv6)
fi


# Check if sockaddr{} has sa_len member.
AC_CHECK_MEMBER([struct sockaddr.sa_len],
 AC_DEFINE(HAVE_SOCKADDR_SA_LEN, 1, define if socket address structures have length fields),,[
#include <sys/types.h>
#include <sys/socket.h>])

# check for plugin dependencies. We also build a list of plugins that we're
# going to compile here so the test binary knows what to link against
PLUGINS="dummy opendmx stageprofi usbpro"

PLUGIN_LIBRARY(artnet, artnet_new, ARTNET)
PLUGIN_LIBRARY(dmx4linux, DMXdev, DMX4LINUX)
PLUGIN_LIBRARY(espnet, espnet_new, ESPNET)
PLUGIN_LIBRARY(sandnet, sandnet_new, SANDNET)
PLUGIN_LIBRARY(pathport, pathport_new, PATHPORT)

# check for libacn
PKG_CHECK_MODULES(libacn, [libacn >= 0.0.1], [
 have_acn="yes"
 PLUGINS="${PLUGINS} e131"
 AC_DEFINE(HAVE_ACN, 1, [define if libacn is installed])
 ], break)

AM_CONDITIONAL(HAVE_ACN, test "${have_acn}" = "yes")

AC_SUBST(libacn_CFLAGS)
AC_SUBST(libacn_LIBS)

# create a list of plugin libs that will be used for testing
PLUGIN_LIBS=''
for p in $PLUGINS
do PLUGIN_LIBS="$PLUGIN_LIBS \$(top_builddir)/plugins/$p/liblla$p.la"
done

AC_SUBST(PLUGIN_LIBS)

# plugin & html data directories
plugindir=$libdir/llad
AC_SUBST(plugindir)

lla_datadir=$datadir/llad
www_datadir=$lla_datadir/www
AC_SUBST(www_datadir)

LLAD_DEFINES="$CFLAGS -DHTTP_DATA_DIR=\\\"$www_datadir\\\" -DPLUGIN_DIR=\\\"$plugindir\\\" "
AC_SUBST(LLAD_DEFINES)

AC_ARG_ENABLE(debug,
              AS_HELP_STRING([--enable-debug], [Enable debugging]),
              AC_DEFINE(DEBUG, 1, [Enable debugging])
             )
AC_ARG_ENABLE(gcov,
              AC_HELP_STRING([--enable-gcov],
                             [turn on code coverage analysis tools]),
              [use_gcov="yes"],
              [use_gcov="no"]
             )
AC_ARG_ENABLE(python-libs,
              AC_HELP_STRING([--enable-python-libs],
                             [Build the python wrappers]),
              [build_python_libs="yes"]
             )

# gcov
if test "${use_gcov}" = "yes"; then
  CFLAGS="$CFLAGS -fprofile-arcs -ftest-coverage"
  CXXFLAGS="$CFLAGS -fprofile-arcs -ftest-coverage"
  LDFLAGS="$LDFLAGS -fprofile-arcs"
fi

# microhttpd
AC_CHECK_LIB(microhttpd, MHD_start_daemon, [have_microhttpd="yes"])
AM_CONDITIONAL(HAVE_LIBMICROHTTPD, test "${have_microhttpd}" = "yes")

if test "${have_microhttpd}" = "yes"; then
 AC_DEFINE(HAVE_LIBMICROHTTPD, 1, [define if libmicrohttpd is installed])
 LIBS="-lmicrohttpd $LIBS"
fi

# python wrappers
AM_CONDITIONAL(BUILD_PYTHON_LIBS, test "${build_python_libs}" = "yes")

if test "${build_python_libs}" = "yes"; then
 AM_PATH_PYTHON(2.3)
 AC_PROG_SWIG(1.3.21)
 SWIG_ENABLE_CXX
 SWIG_PYTHON
fi

# check for cppunit
AM_PATH_CPPUNIT(1.9.6)

AC_OUTPUT_COMMANDS([
  if test -n "$CONFIG_FILES" && test -n "$CONFIG_HEADERS"; then
    # If both these vars are non-empty, then config.status wasn't run by
    # automake rules (which always set one or the other to empty).
    CONFIG_OTHER=${CONFIG_OTHER-lla/common.h}
  fi
  echo $CONFIG_OTHER
  case "$CONFIG_OTHER" in
  *lla/common.h*)
    outfile=lla/common.h
    stampfile=lla/stamp-common
    tmpfile=${outfile}T
    dirname="sed s,^.*/,,g"

    echo creating $outfile
    cat > $tmpfile << _EOF_
/*  -*- Mode: C -*-
 * --------------------------------------------------------------------
 * DO NOT EDIT THIS FILE!  It has been automatically generated
 * from:    configure.in and `echo $outfile|$dirname`.in
 * on host: `(hostname || uname -n) 2>/dev/null | sed 1q`
 * --------------------------------------------------------------------
 */

#ifndef LLA_COMMON_H
#define LLA_COMMON_H 1

_EOF_

    if test x$have_threads = xposix; then
      echo '#define LLA_HAVE_PTHREAD 1' >> $tmpfile
    fi

    # The ugly but portable cpp stuff comes from here
    infile=$srcdir/lla/`echo $outfile | sed 's,.*/,,g;s,\..*$,,g'`-h.in
    sed '/^##.*$/d' $infile >> $tmpfile

    cat >> $tmpfile << '_EOF_'

#endif /* LLA_COMMON_H */
_EOF_

    if cmp -s $tmpfile $outfile; then
      echo $outfile is unchanged
      rm -f $tmpfile
    else
      mv $tmpfile $outfile
      touch $stampfile
    fi
  esac;
],[
  srcdir=$srcdir
  have_threads=$have_threads
])


# output
AC_OUTPUT( Makefile\
    common/Makefile\
    common/export_map/Makefile\
    common/logging/Makefile\
    common/protocol/Makefile\
    common/rpc/Makefile\
    common/network/Makefile\
    common/utils/Makefile\
    include/Makefile\
    include/lla/Makefile\
    include/lla/network/Makefile\
    include/llad/Makefile\
    lla/Makefile \
    python/Makefile \
    llad/Makefile \
    llad/www/Makefile \
    plugins/Makefile \
    plugins/artnet/Makefile \
    plugins/artnet/messages/Makefile \
    plugins/artnet/messages/libllaartnetconf.pc \
    plugins/e131/Makefile \
    plugins/dummy/Makefile \
    plugins/dmx4linux/Makefile \
    plugins/espnet/Makefile \
    plugins/pathport/Makefile \
    plugins/shownet/Makefile \
    plugins/sandnet/Makefile \
    plugins/usbpro/Makefile \
    plugins/usbpro/messages/Makefile \
    plugins/usbpro/messages/libllausbproconf.pc \
    plugins/stageprofi/Makefile \
    plugins/opendmx/Makefile \
    protocols/Makefile \
    protocols/shownet/Makefile \
    liblla.pc \
    )
