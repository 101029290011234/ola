[% INCLUDE gpl.tmpl %]
/*
 * This code has been autogenerated, do not edit
 */

#include <stdio.h>

#include "[% module %][% name %]Msg.h"

[% module %][% name %]Msg[% cls_name %]::[% module %][% name %]Msg[% cls_name %]() {}
[% module %][% name %]Msg[% cls_name %]::~[% module %][% name %]Msg[% cls_name %]() {}

[% MACRO method(type) BLOCK %]
/*
 *
 */
const [% type %] *[% module %][% name %]Msg[% cls_name %]::get_[% array.name %](int *len) {
	*len = sizeof(m_[% array.name %]);
	return m_[% array.name %];
}

/*
 *
 */
void [% module %][% name %]Msg[% cls_name %]::set_[% array.name %]([% type %] *v, int len) {
	int l = sizeof(m_[% array.name %]) < len ? sizeof(m_[% array.name %]) : len;
	memcpy(m_[% array.name %], v, l);
}
[% END %]

[% FOREACH array = msg.array.uint32_t -%]
  [% method('uint32_t') %]
[% END -%]
[% FOREACH array = msg.array.uint16_t -%]
  [% method('uint16_t') %]
[% END -%]
[% FOREACH array = msg.array.uint8_t -%]
  [% method('uint8_t') %]
[% END -%]

/*
 * Pack this object into it's struct
 *
 */
uint8_t *[% module %][% name %]Msg[% cls_name %]::pack(int *len) {
  [% lib FILTER lower %]_[% module FILTER lower %]_[% name FILTER lower %]_msg *p = malloc(sizeof([% lib FILTER lower %]_[% module FILTER lower %]_[% name FILTER lower %]_msg));

  if (p == NULL) {
    *len = 0;
    return NULL;
  }

  p->op = [% lib FILTER upper %]_[% module FILTER upper %]_[% name FILTER upper %]_MSG_[% name FILTER upper %];
[% FOREACH var = msg.uint32_t -%]
  p->data.[% var FILTER lower %] = m_[% var %];
[% END -%]
[% FOREACH var = msg.uint16_t -%]
  p->data.[% var FILTER lower %] = m_[% var %];
[% END -%]
[% FOREACH var = msg.uint8_t -%]
  p->data.[% var FILTER lower %] = m_[% var %];
[% END -%]
[% FOREACH array = msg.array.uint32_t -%]
  memcpy(p->data.array.name, m_[% array.name %], [% array.len %]);
[% END -%]
[% FOREACH array = msg.array.uint16_t -%]
  memcpy(p->data.array.name, m_[% array.name %], [% array.len %]);
[% END -%]
[% FOREACH array = msg.array.uint8_t -%]
  memcpy(p->data.array.name, m_[% array.name %], [% array.len %]);
[% END -%]
  return m;
}
